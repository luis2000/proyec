#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.17929
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace seminarioblog.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="blog")]
	public partial class conectorDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void Insertcomentario(comentario instance);
    partial void Updatecomentario(comentario instance);
    partial void Deletecomentario(comentario instance);
    partial void Insertcontenido(contenido instance);
    partial void Updatecontenido(contenido instance);
    partial void Deletecontenido(contenido instance);
    partial void Insertusuario(usuario instance);
    partial void Updateusuario(usuario instance);
    partial void Deleteusuario(usuario instance);
    #endregion
		
		public conectorDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["blogConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public conectorDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public conectorDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public conectorDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public conectorDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<comentario> comentario
		{
			get
			{
				return this.GetTable<comentario>();
			}
		}
		
		public System.Data.Linq.Table<contenido> contenido
		{
			get
			{
				return this.GetTable<contenido>();
			}
		}
		
		public System.Data.Linq.Table<usuario> usuario
		{
			get
			{
				return this.GetTable<usuario>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.comentario")]
	public partial class comentario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idUs;
		
		private int _idCont;
		
		private System.DateTime _fecha;
		
		private string _content;
		
		private EntityRef<contenido> _contenido;
		
		private EntityRef<usuario> _usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidUsChanging(int value);
    partial void OnidUsChanged();
    partial void OnidContChanging(int value);
    partial void OnidContChanged();
    partial void OnfechaChanging(System.DateTime value);
    partial void OnfechaChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    #endregion
		
		public comentario()
		{
			this._contenido = default(EntityRef<contenido>);
			this._usuario = default(EntityRef<usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUs", DbType="Int NOT NULL")]
		public int idUs
		{
			get
			{
				return this._idUs;
			}
			set
			{
				if ((this._idUs != value))
				{
					if (this._usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsChanging(value);
					this.SendPropertyChanging();
					this._idUs = value;
					this.SendPropertyChanged("idUs");
					this.OnidUsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCont", DbType="Int NOT NULL")]
		public int idCont
		{
			get
			{
				return this._idCont;
			}
			set
			{
				if ((this._idCont != value))
				{
					if (this._contenido.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidContChanging(value);
					this.SendPropertyChanging();
					this._idCont = value;
					this.SendPropertyChanged("idCont");
					this.OnidContChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha", DbType="DateTime NOT NULL")]
		public System.DateTime fecha
		{
			get
			{
				return this._fecha;
			}
			set
			{
				if ((this._fecha != value))
				{
					this.OnfechaChanging(value);
					this.SendPropertyChanging();
					this._fecha = value;
					this.SendPropertyChanged("fecha");
					this.OnfechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contenido_comentario", Storage="_contenido", ThisKey="idCont", OtherKey="id", IsForeignKey=true)]
		public contenido contenido
		{
			get
			{
				return this._contenido.Entity;
			}
			set
			{
				contenido previousValue = this._contenido.Entity;
				if (((previousValue != value) 
							|| (this._contenido.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._contenido.Entity = null;
						previousValue.comentario.Remove(this);
					}
					this._contenido.Entity = value;
					if ((value != null))
					{
						value.comentario.Add(this);
						this._idCont = value.id;
					}
					else
					{
						this._idCont = default(int);
					}
					this.SendPropertyChanged("contenido");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_comentario", Storage="_usuario", ThisKey="idUs", OtherKey="id", IsForeignKey=true)]
		public usuario usuario
		{
			get
			{
				return this._usuario.Entity;
			}
			set
			{
				usuario previousValue = this._usuario.Entity;
				if (((previousValue != value) 
							|| (this._usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._usuario.Entity = null;
						previousValue.comentario.Remove(this);
					}
					this._usuario.Entity = value;
					if ((value != null))
					{
						value.comentario.Add(this);
						this._idUs = value.id;
					}
					else
					{
						this._idUs = default(int);
					}
					this.SendPropertyChanged("usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.contenido")]
	public partial class contenido : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idUs;
		
		private System.DateTime _fecha;
		
		private string _titulo;
		
		private string _content;
		
		private EntitySet<comentario> _comentario;
		
		private EntityRef<usuario> _usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidUsChanging(int value);
    partial void OnidUsChanged();
    partial void OnfechaChanging(System.DateTime value);
    partial void OnfechaChanged();
    partial void OntituloChanging(string value);
    partial void OntituloChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    #endregion
		
		public contenido()
		{
			this._comentario = new EntitySet<comentario>(new Action<comentario>(this.attach_comentario), new Action<comentario>(this.detach_comentario));
			this._usuario = default(EntityRef<usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUs", DbType="Int NOT NULL")]
		public int idUs
		{
			get
			{
				return this._idUs;
			}
			set
			{
				if ((this._idUs != value))
				{
					if (this._usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsChanging(value);
					this.SendPropertyChanging();
					this._idUs = value;
					this.SendPropertyChanged("idUs");
					this.OnidUsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha", DbType="DateTime NOT NULL")]
		public System.DateTime fecha
		{
			get
			{
				return this._fecha;
			}
			set
			{
				if ((this._fecha != value))
				{
					this.OnfechaChanging(value);
					this.SendPropertyChanging();
					this._fecha = value;
					this.SendPropertyChanged("fecha");
					this.OnfechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titulo", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string titulo
		{
			get
			{
				return this._titulo;
			}
			set
			{
				if ((this._titulo != value))
				{
					this.OntituloChanging(value);
					this.SendPropertyChanging();
					this._titulo = value;
					this.SendPropertyChanged("titulo");
					this.OntituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contenido_comentario", Storage="_comentario", ThisKey="id", OtherKey="idCont")]
		public EntitySet<comentario> comentario
		{
			get
			{
				return this._comentario;
			}
			set
			{
				this._comentario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_contenido", Storage="_usuario", ThisKey="idUs", OtherKey="id", IsForeignKey=true)]
		public usuario usuario
		{
			get
			{
				return this._usuario.Entity;
			}
			set
			{
				usuario previousValue = this._usuario.Entity;
				if (((previousValue != value) 
							|| (this._usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._usuario.Entity = null;
						previousValue.contenido.Remove(this);
					}
					this._usuario.Entity = value;
					if ((value != null))
					{
						value.contenido.Add(this);
						this._idUs = value.id;
					}
					else
					{
						this._idUs = default(int);
					}
					this.SendPropertyChanged("usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_comentario(comentario entity)
		{
			this.SendPropertyChanging();
			entity.contenido = this;
		}
		
		private void detach_comentario(comentario entity)
		{
			this.SendPropertyChanging();
			entity.contenido = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.usuario")]
	public partial class usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nickname;
		
		private string _pass;
		
		private string _email;
		
		private System.DateTime _fecha;
		
		private EntitySet<comentario> _comentario;
		
		private EntitySet<contenido> _contenido;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnicknameChanging(string value);
    partial void OnnicknameChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnfechaChanging(System.DateTime value);
    partial void OnfechaChanged();
    #endregion
		
		public usuario()
		{
			this._comentario = new EntitySet<comentario>(new Action<comentario>(this.attach_comentario), new Action<comentario>(this.detach_comentario));
			this._contenido = new EntitySet<contenido>(new Action<contenido>(this.attach_contenido), new Action<contenido>(this.detach_contenido));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nickname", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string nickname
		{
			get
			{
				return this._nickname;
			}
			set
			{
				if ((this._nickname != value))
				{
					this.OnnicknameChanging(value);
					this.SendPropertyChanging();
					this._nickname = value;
					this.SendPropertyChanged("nickname");
					this.OnnicknameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha", DbType="DateTime NOT NULL")]
		public System.DateTime fecha
		{
			get
			{
				return this._fecha;
			}
			set
			{
				if ((this._fecha != value))
				{
					this.OnfechaChanging(value);
					this.SendPropertyChanging();
					this._fecha = value;
					this.SendPropertyChanged("fecha");
					this.OnfechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_comentario", Storage="_comentario", ThisKey="id", OtherKey="idUs")]
		public EntitySet<comentario> comentario
		{
			get
			{
				return this._comentario;
			}
			set
			{
				this._comentario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_contenido", Storage="_contenido", ThisKey="id", OtherKey="idUs")]
		public EntitySet<contenido> contenido
		{
			get
			{
				return this._contenido;
			}
			set
			{
				this._contenido.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_comentario(comentario entity)
		{
			this.SendPropertyChanging();
			entity.usuario = this;
		}
		
		private void detach_comentario(comentario entity)
		{
			this.SendPropertyChanging();
			entity.usuario = null;
		}
		
		private void attach_contenido(contenido entity)
		{
			this.SendPropertyChanging();
			entity.usuario = this;
		}
		
		private void detach_contenido(contenido entity)
		{
			this.SendPropertyChanging();
			entity.usuario = null;
		}
	}
}
#pragma warning restore 1591
